---
import { type CollectionEntry, getCollection, getEntries } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import H1 from "@/components/base/H1.astro";
import Prose from "@/components/base/Prose.astro";
import Section from "@/components/base/Section.astro";
import Link from "@/components/base/Link.astro";
import H2 from "@/components/base/H2.astro";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();

//Ref: https://docs.astro.build/en/guides/content-collections/#accessing-referenced-data
//Ref: https://docs.astro.build/fr/reference/api-reference/#getentries

const additionals = await Promise.all(
  (await getEntries(entry.data.additional ?? [])).map(async (entry) => {
    return {
      ...entry,
      ...(await entry.render()),
    };
  })
);

// let additionalsRender: any[] = []; // ??!
// if (entry.data.additional) {
//   additionalsRender = additionals.map(
//     async (additional) => await additional.render()
//   );
// }

// console.log('render:  ', additionalsRender);
---

<Layout>
  <Link href="/">&larr; Return to home</Link>
  <Section>
    <H1>{entry.data.title}</H1>
    <Prose>
      <Content />
    </Prose>
  </Section>

  {
    entry.data.additional ? (
      <Section>
        <H2>Additional Content</H2>
        <div class="grid grid-cols-2">
          {additionals.map((additional) => (
            <Prose>
              <additional.Content />
            </Prose>
          ))}
        </div>
      </Section>
    ) : null
  }
</Layout>
